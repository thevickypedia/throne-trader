name: pypi-publish

on:
  workflow_dispatch:
  push:
    branches:
      - main
  release:
    types: [ published ]

jobs:
  trial-by-pytest:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # Runs only when the event is NOT a release, as the condition is not necessary when it is
      - name: Check for changes in the package
        if: github.event_name != 'release'
        run: |
          files_changed=$(git diff --name-only "${{ github.event.before }}" "${{ github.sha }}")
          echo "Changes: ${files_changed}"
          if [[ $files_changed =~ "tests/"* || $files_changed =~ "thronetrader/"* ]]; then
            echo "changes_in_folder=true" >> $GITHUB_ENV
            echo "Changes identified in package. Running pytest."
          else
            echo "changes_in_folder=false" >> $GITHUB_ENV
            echo "No changes were found in package. Skipping pytest."
          fi
        shell: bash

      # Runs when the event is a release or when there are changes in the package
      - name: Install dependencies and run pytest
        if: github.event_name == 'release' || env.changes_in_folder == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r thronetrader/requirements.txt
        shell: bash
      - name: Run pytest
        if: github.event_name == 'release' || env.changes_in_folder == 'true'
        run: |
          python -m pytest tests/
        shell: bash

  vanguard:
    needs: trial-by-pytest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install build twine
        shell: bash
      - name: Create packages
        run: |
          python -m build
        shell: bash
      - name: Run twine check
        run: |
          twine check dist/*
        shell: bash

  coronation:
    if: github.event_name == 'release'
    needs: vanguard
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Upload to pypi
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USER }}
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          pip install build twine
          python -m build
          twine upload dist/*.whl
        shell: bash
